# https://dbdiagram.io
# Docs: https://dbml.dbdiagram.io/docs
# https://dbdiagram.io/d/portal-finance-656716f83be1495787f68936

CREATE TYPE "notification_type" AS ENUM (
  'Push',
  'Internal',
  'Mail'
);

CREATE TYPE "financial_transaction_type" AS ENUM (
  'Expense',
  'Income'
);

CREATE TYPE "financial_transaction_occurrence" AS ENUM (
  'Single',
  'Programmatic'
);

CREATE TYPE "financial_transaction_situation" AS ENUM (
  'Pending',
  'PaidOut',
  'PartiallyPaid',
  'Received',
  'PartiallyReceived',
  'Late',
  'Canceled'
);

CREATE TABLE "user" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(45) NOT NULL,
  "email" varchar(25) UNIQUE NOT NULL,
  "password" varchar(15) NOT NULL,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "bank_account" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "name" varchar(45) NOT NULL,
  "password_master" varchar(15) NOT NULL,
  "balance" double DEFAULT 0,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "notification" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "bank_account_id" int NOT NULL,
  "subject" varchar(45) NOT NULL,
  "content" text NOT NULL,
  "was_read" boolean DEFAULT false,
  "type" notification_type NOT NULL,
  "is_send" boolean DEFAULT false,
  "send_at" timestamp,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "mail" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "notification_id" int NOT NULL,
  "recipient" varchar(45) NOT NULL,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "category" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "bank_account_id" int NOT NULL,
  "name" varchar(45) NOT NULL,
  "color" varchar(15) NOT NULL,
  "is_favorite" boolean DEFAULT false,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "financial_transaction" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "bank_account_id" int NOT NULL,
  "title" varchar(55) NOT NULL,
  "description" text,
  "value" double NOT NULL,
  "priority" int,
  "is_observable" boolean DEFAULT false,
  "is_send_notification" boolean DEFAULT false,
  "times_to_repeat" int DEFAULT 0,
  "count_repeated_occurrences" int DEFAULT 0,
  "type" financial_transaction_type NOT NULL,
  "receiver" string,
  "sender" string,
  "type_occurrence" financial_transaction_occurrence DEFAULT 'Single',
  "situation" financial_transaction_situation DEFAULT 'Pending',
  "expires_in" timestamp NOT NULL,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "note" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "financial_transaction_id" int NOT NULL,
  "description" text,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "payment" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "financial_transaction_id" int NOT NULL,
  "value" double NOT NULL,
  "discount" double DEFAULT 0,
  "increase" double DEFAULT 0,
  "paid_at" timestamp DEFAULT (now()),
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "media" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "financial_transaction_id" int NOT NULL,
  "name" varchar(75),
  "created_at" timestamp DEFAULT (now())
);

ALTER TABLE "bank_account" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "notification" ADD FOREIGN KEY ("bank_account_id") REFERENCES "bank_account" ("id");

ALTER TABLE "mail" ADD FOREIGN KEY ("notification_id") REFERENCES "notification" ("id");

ALTER TABLE "category" ADD FOREIGN KEY ("bank_account_id") REFERENCES "bank_account" ("id");

ALTER TABLE "financial_transaction" ADD FOREIGN KEY ("bank_account_id") REFERENCES "bank_account" ("id");

CREATE TABLE "financial_transaction_category" (
  "financial_transaction_id" int,
  "category_id" int,
  PRIMARY KEY ("financial_transaction_id", "category_id")
);

ALTER TABLE "financial_transaction_category" ADD FOREIGN KEY ("financial_transaction_id") REFERENCES "financial_transaction" ("id");

ALTER TABLE "financial_transaction_category" ADD FOREIGN KEY ("category_id") REFERENCES "category" ("id");

ALTER TABLE "note" ADD FOREIGN KEY ("financial_transaction_id") REFERENCES "financial_transaction" ("id");

ALTER TABLE "payment" ADD FOREIGN KEY ("financial_transaction_id") REFERENCES "financial_transaction" ("id");

ALTER TABLE "media" ADD FOREIGN KEY ("financial_transaction_id") REFERENCES "financial_transaction" ("id");